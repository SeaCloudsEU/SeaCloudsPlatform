name: SeaClouds Platform on localhost

location: localhost

services:
- type: seaclouds-dashboard
  id: seaclouds-dashboard
  name: seaclouds-dashboard
  brooklyn.config:
    runtimeFiles:
      file:///~/.m2/repository/eu/seaclouds-project/planner-service/0.8.0-SNAPSHOT/planner-service-0.8.0-SNAPSHOT.jar : planner-service.jar
    deployer.host: $brooklyn:component("deployer").attributeWhenReady("host.address")
    deployer.port: $brooklyn:component("deployer").attributeWhenReady("brooklynnode.webconsole.httpPort")
    sla.host: $brooklyn:component("sla-core").attributeWhenReady("host.address")
    sla.port: $brooklyn:component("sla-core").attributeWhenReady("http.port")
    monitor.grafana.host: $brooklyn:component("grafana").attributeWhenReady("host.address")
    monitor.grafana.port: $brooklyn:component("grafana").config("grafana.port")
    planner.host: $brooklyn:component("planner").attributeWhenReady("host.address")
    planner.port: $brooklyn:component("planner").config("planner.config.port")
  launch.latch: $brooklyn:component("planner").attributeWhenReady("service.isUp")
- type: seaclouds-planner
  name: seaclouds-planner
  brooklyn.config:
    runtimeFiles:
      file:///~/.m2/repository/eu/seaclouds-project/planner-service/0.8.0-SNAPSHOT/planner-service-0.8.0-SNAPSHOT.jar : planner-service.jar
  install.latch: $brooklyn:component("deployer").attributeWhenReady("service.isUp")
- type: seaclouds-deployer
  name: seaclouds-deployer
  brooklyn.config:
    bindAddress: localhost
    brooklynnode.classpath:
    - file:///~/.m2/repository/eu/seaclouds-project/deployer/0.8.0-SNAPSHOT/deployer-0.8.0-SNAPSHOT.jar
  setup.latch: $brooklyn:component("sla-core").attributeWhenReady("service.isUp")
- type: org.apache.brooklyn.entity.webapp.tomcat.TomcatServer
  name: seaclouds-sla-service
  id: sla-core
  name: seaclouds-sla-service
  brooklyn.config:
    jmx.enabled: false
    java.sysprops:
        DB_URL: $brooklyn:formatString("jdbc:%s%s", component("sla-db").attributeWhenReady("datastore.url"),"sc_sla")
        DB_USERNAME: "atossla"
        DB_PASSWORD: "_atossla_"
        MONITOR_METRICS_URL: $brooklyn:formatString("http://%s:%s/v1/metrics", component("monitor-manager").attributeWhenReady("host.address"), component("monitor-manager").config("monitor.manager.port"))
        SLA_URL: $brooklyn:formatString("http://%s:%s", component("sla-core").attributeWhenReady("host.address"), component("sla-core").attributeWhenReady("http.port"))
  war: file:///~/.m2/repository/eu/seaclouds-project/sla-service/0.8.0-SNAPSHOT/sla-service-0.8.0-SNAPSHOT.war

  setup.latch: $brooklyn:component("sla-db").attributeWhenReady("service.isUp")
- type: org.apache.brooklyn.entity.database.mysql.MySqlNode
  name: seaclouds-sla-db
  id: sla-db
  brooklyn.config:
    creationScriptUrl: https://raw.githubusercontent.com/SeaCloudsEU/sla-core/e1d3bd4dec27236cfdefa1eae81d38db3dcd11da/sla-repository/src/main/resources/sql/01database.sql
  install.latch: $brooklyn:component("monitor-manager").attributeWhenReady("service.isUp")
- type: seaclouds-monitor-manager
  name: seaclouds-monitor-manager
  brooklyn.config:
    monitor.dda.host: $brooklyn:component("monitor-dda").attributeWhenReady("host.address")
    monitor.dda.port: $brooklyn:component("monitor-dda").config("monitor.dda.port")
  install.latch: $brooklyn:component("monitor-dda").attributeWhenReady("service.isUp")
- type: seaclouds-monitor-dda
  name: seaclouds-monitor-dda
  install.latch: $brooklyn:component("grafana").attributeWhenReady("service.isUp")
- type: seaclouds-influxdb
  name: seaclouds-influxdb
  brooklyn.config:
    influxdb.config.db.name: tower4clouds
    influxdb.config.db.password: seaclouds
- type: seaclouds-grafana
  name: seaclouds-grafana
  brooklyn.config:
    grafana.config.password: seaclouds
    grafana.config.influxdb.url: $brooklyn:formatString("http://%s:%s", component("influxdb").attributeWhenReady("host.address"), component("influxdb").config("influxdb.port"))
    grafana.config.influxdb.db.name: $brooklyn:component("influxdb").config("influxdb.config.db.name")
    grafana.config.influxdb.db.password: $brooklyn:component("influxdb").config("influxdb.config.db.password")
  install.latch: $brooklyn:component("influxdb").attributeWhenReady("service.isUp")
